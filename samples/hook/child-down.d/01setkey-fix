#!/bin/sh

# XXX This script is a temporary workaround for the fact that spmd fails to
# install policies properly for the unspecified addresses with the prefix
# length included. That bug prevents the connection from working, and this
# script is a temporary workaround until the bug is fixed in iked
# This script only needs to be used when the corresponding 01setkey-fix
# script is used in child-up.d.

echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: running script $0" >> /var/log/messages

# Look for two entries for ::/0 and 0.0.0.0/0
entryipv4=`setkey -DP | grep ${INTERNAL_ADDR} | grep "0\.0\.0\.0/0\[" | sed -n 2p`
entryipv6=`setkey -DP | grep ${INTERNAL6_ADDR} | grep "::/0\[" | sed -n 2p`

# Since spmd didn't install these policies, we need to delete them
# If found, delete IPv6 policy entries
if [ "x$entryipv6" != "x" ]; then
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: deleting policies for IPv6 ::/0 network" >> /var/log/messages
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: remote address: ${INTERNAL_ADDR}" >> /var/log/messages
	setkey -c << EOF
	spddelete ::/0 ${INTERNAL6_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spddelete ${INTERNAL6_ADDR} ::/0 any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
EOF
fi

# If found, delete IPv4 policy entries
if [ "x$entryipv4" != "x" ]; then
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: deleting policies for IPv4 0.0.0.0/0 network" >> /var/log/messages
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: remote address: ${INTERNAL_ADDR}" >> /var/log/messages
	setkey -c << EOF
	spddelete 0.0.0.0/0 ${INTERNAL_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spddelete ${INTERNAL_ADDR} 0.0.0.0/0 any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
EOF
fi
