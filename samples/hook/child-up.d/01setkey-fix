#!/bin/sh

# Work around a bug when we are acting as a gateway to
# the internet (MY_NET and MY_NET6 are set to 0.0.0.0/0
# and ::/0, respectively). In this case, the prefixlength
# is not included when spmd adds the policy, so we need
# to correct that here.
#
# Currently, spmd only installs policies for one address family.
# If we have leased addresses to the peer for both
# address families, add the policies for the address
# family that does not have policies installed yet.

echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: running script $0" >> /var/log/messages

# Look for two entries for :: and 0.0.0.0
entryipv4=`setkey -DP | grep ${INTERNAL4_ADDR} | grep "0\.0\.0\.0\[" | sed -n 2p`
entryipv6=`setkey -DP | grep ${INTERNAL6_ADDR} | grep "::\[" | sed -n 2p`

# If found, fix IPv6 policy entries by replacing with policies with prefix length set to 0
# Then add the policies for IPv4 if INTERNAL4_ADDR is not empty
if [ "x${entryipv6}" != "x" ]; then
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: fixing policies for IPv6 ::/0 network" >> /var/log/messages
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: remote address: ${INTERNAL6_ADDR}" >> /var/log/messages
	setkey -c << EOF
	spdadd ::/0 ${INTERNAL6_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spddelete :: ${INTERNAL6_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spdadd ${INTERNAL6_ADDR} ::/0 any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
	spddelete ${INTERNAL6_ADDR} :: any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
EOF
if [ "x${INTERNAL4_ADDR}" != "x" ]; then
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: adding policies for IPv4 0.0.0.0/0 network" >> /var/log/messages
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: remote address: ${INTERNAL4_ADDR}" >> /var/log/messages
	setkey -c << EOF
	spdadd 0.0.0.0/0 ${INTERNAL4_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spdadd ${INTERNAL4_ADDR} 0.0.0.0/0 any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
EOF
fi
fi

# If found, fix IPv4 policy entries by replacing with policies with prefix length set to 0
# Then add the policies for IPv6 if INTERNAL6_ADDR is not empty
if [ "x${entryipv4}" != "x" ]; then
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: fixing policies for IPv4 0.0.0.0/0 network" >> /var/log/messages
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: remote address: ${INTERNAL4_ADDR}" >> /var/log/messages
	setkey -c << EOF
	spdadd 0.0.0.0/0 ${INTERNAL4_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spddelete 0.0.0.0 ${INTERNAL4_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spdadd ${INTERNAL4_ADDR} 0.0.0.0/0 any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
	spddelete ${INTERNAL4_ADDR} 0.0.0.0 any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
EOF
if [ "x${INTERNAL6_ADDR}" != "x" ]; then
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: adding policies for IPv6 ::/0 network" >> /var/log/messages
	echo "`date +"%b %e %H:%M:%S"` `hostname` iked: [INFO]: remote address: ${INTERNAL6_ADDR}" >> /var/log/messages
	setkey -c << EOF
	spdadd ::/0 ${INTERNAL6_ADDR} any -P out ipsec esp/tunnel/${LOCAL_ADDR}-${REMOTE_ADDR}/require;
	spdadd ${INTERNAL6_ADDR} ::/0 any -P in ipsec esp/tunnel/${REMOTE_ADDR}-${LOCAL_ADDR}/require;
EOF
fi
fi
