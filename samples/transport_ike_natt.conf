# $Id: transport_ike_natt.conf

## Additional selectors for various NAT scenarios 

## Selectors for common private IPv4 address ranges using udp port 1701
## to support connections from L2TP/IPsec clients through NAT devices

## Edit as needed if you need to support transport mode NAT traversal for other
## protocols or ports (e.g. tcp port 80 to secure http traffic)

## Enable only what is needed for your scenario

## These selectors work with Windows and iphones clients

## Android clients have not been tested yet.

## These settings work with Windows and iphones for the case when you are behind
## NAT and peer is not behind NAT, provided that MY_PUBLIC_IP_IPADDRESS is set
## correctly in vals.conf. These settings also work with iphones and Windows
## when both you and the peer are behind NAT and PEERS_ADDRESS is set to
## IP_ANY in vals.conf. 

selector ike_trans_natt_sel_out {
	direction outbound;
	src "${MY_PUBLIC_IPADDRESS}" port 1701;
	dst "${PEERS_IPADDRESS}" port any;
	## IP_RW is not functional yet
	#dst IP_RW port any;
	upper_layer_protocol "udp";
	policy_index ike_trans_policy;
};

selector ike_trans_natt_sel_in {
	direction inbound;
	dst "${MY_PUBLIC_IPADDRESS}" port 1701;
	src "${PEERS_IPADDRESS}" port any;
	## IP_RW is not functional yet
	#src IP_RW port any;
	upper_layer_protocol "udp";
	policy_index ike_trans_policy;
};

#############################################
## Case when peer is behind NAT and you know the peer's private IP address.
## PEERS_PRIVATE_IPADDR is set in vals.conf to the peer's private IP address.
## If you are not behind NAT, set MY_PUBLIC_IPADDRESS to the same value that
## MY_IPADDRESS is set to in vals.conf, otherwise set it to your public IP
## address.

#selector ike_trans_natt_sel2_out {
#	direction outbound;
#	src "${MY_PUBLIC_IPADDRESS}" port 1701;
#	dst "${PEERS_PRIVATE_IPADDRESS}" port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

#selector ike_trans_natt_sel2_in {
#	direction inbound;
#	dst "${MY_PUBLIC_IPADDRESS}" port 1701;
#	src "${PEERS_PRIVATE_IPADDRESS}" port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

#############################################
## Settings for case when peer is behind NAT
## Selectors for common IPv4 private address ranges from which clients connect
## from behind NAT

## These selectors have not been tested yet. They are probably not necessary
## if PEERS_IPADDRESS is set to IP_ANY

#selector ike_trans_natt_sel3_out {
#	direction outbound;
#	src "${MY_PUBLIC_IPADDRESS}" port 1701;
#	dst 192.168.0.0/16 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

#selector ike_trans_natt_sel3_in {
#	direction inbound;
#	dst "${MY_PUBLIC_IPADDRESS}" port 1701;
#	src 192.168.0.0/16 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

#selector ike_trans_natt_sel4_out {
#	direction outbound;
#	src "${MY_PUBLIC_IPADDRESS}" port 1701;
#	dst 10.0.0.0/8 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

#selector ike_trans_natt_sel4_in {
#	direction inbound;
#	dst "${MY_PUBLIC_IPADDRESS}" port 1701;
#	src 10.0.0.0/8 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

#selector ike_trans_natt_sel5_out {
#	direction outbound;
#	src "${MY_PUBLIC_IPADDRESS}" port 1701;
#	dst 172.16.0.0/12 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#;

#selector ike_trans_natt_sel5_in {
#	direction inbound;
#	dst "${MY_PUBLIC_IPADDRESS}" port 1701;
#	src 172.16.0.0/12 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

## Verizon's LTE network uses 100.0.0.0/8 as a private IPv4 address range
## Enable these if mobile Verizon clients cannot connect

#selector ike_trans_natt_sel6_out {
#	direction outbound;
#	src "${MY_PUBLIC_IPADDRESS}" port 1701;
#	dst 100.0.0.0/8 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};

#selector ike_trans_natt_sel6_in {
#	direction inbound;
#	dst "${MY_PUBLIC_IPADDRESS}" port 1701;
#	src 100.0.0.0/8 port any;
#	upper_layer_protocol "udp";
#	policy_index ike_trans_policy;
#};
